package DNA_zu_Protein;

import java.awt.Color;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * eingabeAlignment.java
 *
 * Created on 26.04.2010, 17:13:06
 */

/**
 *
 * @author admin
 */
public class eingabeAlignment extends javax.swing.JFrame {
    private int counter;
    private int compare_counter;

    /** Creates new form eingabeAlignment */
    public eingabeAlignment() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        l1 = new javax.swing.JLabel();
        l2 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        straffaktor = new javax.swing.JTextField();
        matchfaktor = new javax.swing.JTextField();
        mismatchfaktor = new javax.swing.JTextField();
        dna1_In = new javax.swing.JTextField();
        dna2_In = new javax.swing.JTextField();
        Alignment_s = new javax.swing.JLabel();
        OK = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        out = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        OK_default = new javax.swing.JButton();
        counterField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        l1.setText("Straffaktor");

        l2.setText("Matchfaktor");

        l3.setText("Mismatchfaktor");

        dna1_In.setText("DNA 1");

        dna2_In.setText("DNA 2");

        Alignment_s.setText("Alignment(s)");

        OK.setText("OK");
        OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKActionPerformed(evt);
            }
        });

        out.setColumns(20);
        out.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        out.setRows(5);
        jScrollPane1.setViewportView(out);

        jLabel1.setText("Default");

        OK_default.setText("OK");
        OK_default.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OK_defaultActionPerformed(evt);
            }
        });

        counterField.setText("(Anzahl)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(counterField, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Alignment_s)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 342, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(OK_default)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(l1, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(l2)
                                .addGap(32, 32, 32))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(straffaktor, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(matchfaktor, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(mismatchfaktor, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(390, 390, 390))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(l3, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                                .addGap(38, 38, 38))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dna2_In, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
                            .addComponent(dna1_In, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l1)
                    .addComponent(l3)
                    .addComponent(l2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(straffaktor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(matchfaktor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mismatchfaktor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dna1_In, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dna2_In, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OK_default)
                    .addComponent(jLabel1)
                    .addComponent(counterField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Alignment_s)
                    .addComponent(OK))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKActionPerformed
        // TODO add your handling code here:
        out.setText("");
        String DNA1 = dna1_In.getText();
        String DNA2 = dna2_In.getText();
        DNA_Protein_homo_sapiens m = new DNA_Protein_homo_sapiens();
        int i = DNA1.length();
        int j = DNA2.length();
        DualString tmp = new DualString();
        //String s_ = "",t_ = "",m_ = "";
        int Straffaktor = Integer.parseInt(straffaktor.getText());
        int Matchfaktor = Integer.parseInt(matchfaktor.getText());
        int Mismatchfaktor = Integer.parseInt(mismatchfaktor.getText());
        int[][]M = m.aehnlichkeit_ohne_ausgabe(DNA1, DNA2, Straffaktor, Matchfaktor, Mismatchfaktor);
        tmp.m = "";
        tmp.s = "";
        tmp.t = "";
        this.counter = 0;
        this.compare_counter = Integer.parseInt(counterField.getText());
        opt_Alignment(tmp,i, j, M, DNA1, DNA2, Straffaktor, Matchfaktor, Mismatchfaktor);
        if(counterField.getText().equals("1"))
            Alignment_s.setText("Alignment");
        else
            Alignment_s.setText("Alignments");
    }//GEN-LAST:event_OKActionPerformed

    public void opt_Alignment(DualString tmp,int i,int j,int[][]M,String s, String t, int Straffaktor,int Matchfaktor,int Mismatchfaktor){
        String s_="";
        String t_="";
        String m_="";
        DualString tmp2;
        if(this.counter<this.compare_counter)//Hört auf Alignments auszugeben, wenn die vorgegebene Anzahl erreicht wird.
        {
            if(i==0&&j==0){
                this.counter++;
                System.out.println(tmp.s +"\n"+ tmp.m +"\n"+ tmp.t);
                this.out.setText(this.out.getText() + "### Alignment "+ counter + " ###\n" + tmp.s +"\n"+ tmp.m +"\n"+ tmp.t+"\n\n");
                return;
            }
            if(i>0 && M[i][j]==M[i-1][j]+Straffaktor){
                s_=s.substring(i-1, i)+tmp.s;
                t_="-"+tmp.t;
                m_=" "+tmp.m;
                tmp2=new DualString();
                tmp2.s=s_;
                tmp2.t=t_;
                tmp2.m=m_;

                //System.out.println("####################\n"+tmp2.s +"  "+i+"  "+j+"\n"+ tmp2.m +"\n"+ tmp2.t);
                this.opt_Alignment(tmp2,i-1, j,M,s,t,Straffaktor,Matchfaktor,Mismatchfaktor);
            }
            if(j>0 && M[i][j]==M[i][j-1]+Straffaktor){
                s_="-"+tmp.s;
                t_=t.substring(j-1, j)+tmp.t;
                m_=" "+tmp.m;
                tmp2=new DualString();
                tmp2.s=s_;
                tmp2.t=t_;
                tmp2.m=m_;
                //System.out.println("####################\n"+tmp2.s +"  "+i+"  "+j+"\n"+ tmp2.m +"\n"+ tmp2.t);
                this.opt_Alignment(tmp2,i, j-1,M,s,t,Straffaktor,Matchfaktor,Mismatchfaktor);
            }
            if(i>0&&j>0){
                if(M[i][j]==M[i-1][j-1]+Matchfaktor){
                    s_=s.substring(i-1,i)+tmp.s;
                    t_=t.substring(j-1, j)+tmp.t;
                    m_="|"+tmp.m;
                    tmp2=new DualString();
                    tmp2.s=s_;
                    tmp2.t=t_;
                    tmp2.m=m_;
                   //System.out.println("####################\n"+tmp2.s +"  "+i+"  "+j+"\n"+ tmp2.m +"\n"+ tmp2.t);
                    this.opt_Alignment(tmp2,i-1, j-1,M,s,t,Straffaktor,Matchfaktor,Mismatchfaktor);
                }
                else{
                    s_=s.substring(i-1,i)+tmp.s;
                    t_=t.substring(j-1, j)+tmp.t;
                    m_=" "+tmp.m;
                    tmp2=new DualString();
                    tmp2.s=s_;
                    tmp2.t=t_;
                    tmp2.m=m_;
                    //System.out.println("####################\n"+tmp2.s +"  "+i+"  "+j+"\n"+ tmp2.m +"\n"+ tmp2.t);
                    this.opt_Alignment(tmp2,i-1, j-1,M,s,t,Straffaktor,Matchfaktor,Mismatchfaktor);
                }
                }
        }
    }

    private void OK_defaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OK_defaultActionPerformed
        // TODO add your handling code here:
        matchfaktor.setText("2");
        straffaktor.setText("-3");
        mismatchfaktor.setText("-1");
        dna1_In.setText("AAAT");
        dna2_In.setText("AGT");
        counterField.setText("3");
        out.setText("");
    }//GEN-LAST:event_OK_defaultActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new eingabeAlignment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Alignment_s;
    private javax.swing.JButton OK;
    private javax.swing.JButton OK_default;
    private javax.swing.JTextField counterField;
    private javax.swing.JTextField dna1_In;
    private javax.swing.JTextField dna2_In;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    private javax.swing.JTextField matchfaktor;
    private javax.swing.JTextField mismatchfaktor;
    private javax.swing.JTextArea out;
    private javax.swing.JTextField straffaktor;
    // End of variables declaration//GEN-END:variables

}
