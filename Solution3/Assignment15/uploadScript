#!/usr/bin/perl -w
# file layout (tem)
# >SeqName
# Type (sequence, secondary structure and phi angle, etc.)
# Sequence
# The file might more than one time contain each SeqName,
# so that all information could be given for each Sequence.
# file layout (ali)
# >SeqName (might refer tem-file)
# Some Information about the Sequence
# Sequence with gap that aligns the other Sequences in the file	
# imports
use strict;
use LWP::Simple;
use DBI;
#
#Get the organism ID, insert it if not existent
sub getOrganismId {
	my $db = $_[0];
	my $organism = $_[1];
	#Try to fetch an existing organism
	my $queryOrganismIdStmt = $db->prepare("SELECT `Id` from Organism WHERE `Name` = ?;");
	$queryOrganismIdStmt->execute($organism);
	my $result = $queryOrganismIdStmt->fetchrow_hashref();
	if(defined $result->{Id}) {
		return $result->{Id};
	} else  {
		#If that didn't work, we need to insert it
		my $insertStmt = $db->prepare("INSERT INTO Organism(`Name`) VALUES (?);");
		$insertStmt->execute($organism);
		return $insertStmt->{mysql_insertid};
	}
}
# subs
sub getHomstradId {
  # params
  my $db = $_[0];
  # Try to fetch DB ID
  my $querySelect = $db->prepare("SELECT Id from DB WHERE Name = 'HOMSTRAD';");
  $querySelect->execute();
  my $result = $querySelect->fetchrow_hashref();
  if(defined $result->{Id}) {
    return $result->{Id};
  } else {
	die "WHO FAILED TO INITIALIZE THE DATABASE PROPERLY, AGAIN? WHOEVER, EXECUTE SQLInsert.sql, DO IT NOW!\n";
  }
}
sub saveSequenceComplete {
	$db = $_[0];
	$dbId = $_[1]; #ID of HOMSTRAD in the DB table
	$SeqDBIdentifier = $_[2];
	$name = $_[3];
	$def = $_[4];
	$seq = $_[5];
	$organism = $_[6];
	$type = $_[7];
	$structure = $_[8];
	$AlignId = $_[9];
	#Insert the sequence
	my $seqInsertStmt = $db->prepare("INSERT INTO Seq (`Name`, `Definition`, `Seq`, `OrganismId`, `Structure`, `Type`) VALUES (?,?,?,?,?,?);");
	$seqInsertStmt->execute($name, $def, $seq, getOrganismId($organism), $structure, $type);
	my $seqId = $insertStmt->{mysql_insertid};
	#Insert the source. Swissprot-specific ID is NOT set.
	$sourceInsertStmt = $db->prepare("INSERT INTO Source (`DBId`,`SeqId`,`SeqDBIdentifier`) VALUES (?,?,?);");
	$sourceInsertStmt->execute($dbId, $seqId, $name);
	#Insert 
}
# Settings
my $path="/home/proj/biocluster/praktikum/bioprakt/Data/HOMSTRAD/";
# open connection to Database
my $db = DBI->connect('DBI:mysql:bioprakt4;host=mysql2-ext.bio.ifi.lmu.de', 'bioprakt4', 'vGI5GCMg0x') or die "Could not connect to database: $DBI::errstr";
my $dbId = getHomstradId($db);
# loop over all files
# in each directory theres a ali and a tem file (ali = Sequence-Alignment, tem = secondary structure)
@homstrandFiles = <$path."*">;
foreach my $directory (@homstrandFiles) {
  print "Processing $path$directory/$directory(.ali|.tem)\n";
  # read
  open ALIINPUT, "<$path$directory/$directory.ali" or die "Couldn't open file: \'$path$directory/$directory.ali\' ".$!
  open TEMINPUT, "<$path$directory/$directory.tem" or die "Couldn't open file: \'$path$directory/$directory.tem\' ".$!
  my @aliLines = <ALIINPUT>;
  my @temLines = <TEMINPUT>;
  close(ALIINPUT);
  close(TEMINPUT);
  
  # parse variables
  my $name="";
  my $seq="";
  my $def="";
  my $organismId="";
  my $type="Protein";
  my $structure="";
  my $alignment = "";
  my $AlignId="";
  
  foreach my $line (@aliLines) {
    if(substr($line, 0, 2) eq "C;") {} # Comment => ignore
    elsif(substr($line, 0, 1) eq ">") { # Identifier => save last ali if there is one
      if($seq) {
        saveSequenceComplete ($db, $dbId, $SeqDBIdentifier, $name, $def, $seq, $organism, $type, $structure, $AlignId);
	$alignment = "";
      }
    } elsif(substr($line, 0, 10) eq "structureX") {
      chomp($line);
      my @grep = split(/:/, $line);
      $name = $grep[6];
      $organism = $grep[7];
    } else { #It's a line of the alignment
	#Remove whitespace
        $line =~ s/\s//g;
        $alignment = $alignment . $line;
    }
  }
  
}


