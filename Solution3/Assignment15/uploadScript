#! /usr/bin/perl -w

# file layout (tem)
# >SeqName
# Type (sequence, secondary structure and phi angle, etc.)
# Sequence
# The file might more than one time contain each SeqName,
# so that all information could be given for each Sequence.

# file layout (ali)
# >SeqName (might refer tem-file)
# Some Information about the Sequence
# Sequence with gap that aligns the other Sequences in the file

# imports
use strict;
use LWP::Simple;
use DBI;

# subs
sub getHomstradId {
  # params
  my $db = $_[0];
  
  # Try to fetch ncbi
  my $querySelect = $db->prepare("SELECT Id from DB WHERE Name = 'HOMSTRAD';");
  $querySelect->execute();
  my $result = $querySelect->fetchrow_hashref();
  if(defined $result->{Id}) {
    return $result->{Id};
  }
  
  # If that didn't return, we need to insert it
  my $queryInsert = $db->prepare("INSERT INTO DB(`Name`) VALUES ('HOMSTRAD');");
  $queryInsert->execute();
}
sub saveSequenceComplete {
  
}

# Settings
$path="/home/proj/biocluster/praktikum/bioprakt/Data/HOMSTRAD/";

# open connection to Database
my $db = DBI->connect('DBI:mysql:bioprakt4;host=mysql2-ext.bio.ifi.lmu.de', 'bioprakt4', 'vGI5GCMg0x') or die "Could not connect to database: $DBI::errstr";

my $dbId = getHomstradId($db);

# loop over all files
# in each directory theres a ali and a tem file (ali = Sequence-Alignment, tem = secondary structure)
@homstrandFiles = <$path."*">;
foreach $directory (@homstrandFiles) {
  # read
  open ALIINPUT, "<$path$directory/$directory.ali" or die "Couldn't open file: \'$path$directory/$directory.ali\' ".$!
  open TEMINPUT, "<$path$directory/$directory.tem" or die "Couldn't open file: \'$path$directory/$directory.tem\' ".$!
  my @aliLines = <ALIINPUT>;
  my @temLines = <TEMINPUT>;
  close(ALIINPUT);
  close(TEMINPUT);
  
  # parse variables
  my $name="";
  my $seq="";
  my $def="";
  my $organismId="";
  my $type="Protein";
  my $structure="";
  my $AlignId="";
  
  foreach my $line (@aliLines) {
    if(substr($line, 0, 2) eq "C;") {} # Comment => ignore
    elsif(substr($line, 0, 1) eq ">") { # Identifier => save last ali?
      if($seq) {
        saveSequenceComplete ($db, $dbId, $SeqDBIdentifier, $name, $def, $seq, $organism, $type, $structure, $AlignId);
      }
    } 
    elsif(substr($line, 0, 10) eq "structureX") {
      chomp($line);
      my @grep = split(/:/, $line);
      $name = $grep[6];
      $organism = $grep[7];
    } else {
      $line =~ s/\s//g;
    }
  }
  
}


