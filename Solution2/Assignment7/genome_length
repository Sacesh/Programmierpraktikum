#!/usr/bin/perl -w
use strict;
use Getopt::Std;
my %options=();
getopts("r",\%options);
my $organismIsRegex = defined $options{r};

my $argc = @ARGV;
die "Usage: $0 <Organism name> [-r]\n\tIf -r is given the argument is interpreted as regex" unless $argc >= 1;
my $organismName = $ARGV[0];
print "Interpreting organism '$organismName' as regular expression\n" if $organismIsRegex;
#Set the default FTP transfer mode to passive
$ENV{'FTP_PASSIVE'} = "1";
#Donwload the genome report
use LWP::Simple;
my $genomeReport= get "ftp://ftp.ncbi.nlm.nih.gov/genomes/GENOME_REPORTS/prokaryotes.txt";
#Alternate method that also works on CIP
#my $genomeReport= downloadGenomeReport();
print $genomeReport;
if(!$genomeReport) {
	die "Could not download NCBI genome report!\n";
}
#Find the line(s) with the organism
foreach my $line (split /\n/ ,$genomeReport) {
	chomp $line;
	if($organismIsRegex) {
		if($line =~ m/^($organismName)\t/g) {
			my $currentOrganism = substr($line, 0, index($line, '	'));
			if($line =~ m/^([^\t]+\t){5}([\d.]+)/) {
				print "Genome of '$currentOrganism' has length $2 Mb\n";
			}
		}
	} else {
		if($line =~ m/^\Q$organismName)\E\t/g) {
			my $currentOrganism = substr($line, 0, index($line, '	'));
			if($line =~ m/^([^\t]+\t){5}([\d.]+)/) {
				print "Genome of '$currentOrganism' has length $2 Mb\n";
			}
		}
	}
}